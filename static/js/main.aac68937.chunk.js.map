{"version":3,"sources":["resources/img/mjolnir.png","components/errorMessage/error.gif","resources/img/vision.png","components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/app/App.js","index.js"],"names":["module","exports","AppHeader","React","createElement","className","href","MarvelService","constructor","_this","_apiBase","_apiKey","_baseOffsetChar","getResource","async","res","fetch","url","ok","Error","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_transformCharacter","getCharacter","this","id","char","name","descr","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","RandomChar","Component","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","componentDidMount","componentWillUnmount","clearInterval","timerId","render","errorMessage","spinner","content","View","onClick","mjolnir","_ref","target","rel","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","_hasMountedOnce","renderItems","arr","selectedChar","onCharSelected","props","item","itemClass","key","tabIndex","role","onKeyDown","e","preventDefault","disabled","Skeleton","Fragment","CharInfo","charId","componentDidUpdate","prevProps","skeleton","i","ErrorBoundary","componentDidCatch","err","errInfo","console","log","children","App","decoration","container","document","getElementById","createRoot","StrictMode"],"mappings":"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","file":"static/js/main.aac68937.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mjolnir.dd8446a3.png\";","module.exports = __webpack_public_path__ + \"static/media/error.6617f447.gif\";","module.exports = __webpack_public_path__ + \"static/media/vision.76e8b3e1.png\";","import React from 'react';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","\n\nclass MarvelService {\n\n    _apiBase = 'https://marvel-server-zeta.vercel.app/';\n    _apiKey = 'apikey=d4eecb0c66dedbfae4eab45d312fc1df';\n    _baseOffsetChar = 0;\n\n    getResource = async (url) => {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffsetChar) => {\n\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0])\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            descr: char.description\n                ? char.description.length > 210\n                ? `${char.description.slice(0, 210)}...`\n                : char.description\n                : 'There is no description for this character',\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n}\n\nexport default MarvelService;","import React from \"react\";\n\nconst Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","import React from 'react';\nimport img from './error.gif'\n\n\nconst ErrorMessage = () => {\n    return (\n        <img src={img} alt=\"error\" />\n    )\n}\n\nexport default ErrorMessage;","import React from 'react';\nimport { Component } from 'react';\nimport MarvelService from \"../../services/MarvelService\";\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount () {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 5000);\n    }\n\n    componentWillUnmount () {\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({ \n            char, \n            loading: false \n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({ \n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({ \n            loading: false, \n            error: true \n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * 20) + 1;\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n\n    const {name, descr, thumbnail, homepage, wiki} = char;\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {descr}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} target=\"_blank\" rel=\"noopener noreferrer\" className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} target=\"_blank\" rel=\"noopener noreferrer\" className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import React from 'react';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './charList.scss';\n\n\nclass CharList extends Component {\n    \n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 0,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    \n    componentDidMount () {\n        if (!this._hasMountedOnce) {\n            this._hasMountedOnce = true;\n            this.onRequest(this.state.offset);\n        }\n    }\n\n    onRequest = (offset) => {\n\n        this.onCharListLoading();\n        this.marvelService\n            .getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n    }\n\n    onCharListLoading = () => {\n        this.setState({newItemLoading: true})\n    }\n\n    onCharListLoaded = (newCharList) => {\n\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({ \n            charList: [...charList, ...newCharList], \n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({ \n            loading: false, \n            error: true \n        })\n    }\n\n    renderItems (arr) {\n\n        const { selectedChar, onCharSelected } = this.props;\n\n        const items = arr.map(item => {\n\n            const isSelected = item.id === selectedChar;\n            const itemClass = isSelected ? \"char__item char__item_selected\" : \"char__item\";\n\n            return (\n                <li className={itemClass}   \n                    key={item.id} \n                    tabIndex=\"0\"\n                    role=\"button\"\n                    onClick={() => onCharSelected(item.id)}\n                    onKeyDown={(e) => {\n                        if (e.key === 'Enter' || e.key === ' ') {\n                            e.preventDefault();\n                            onCharSelected(item.id);\n                        }\n                    }}>\n                    <img src={item.thumbnail} alt={item.name}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n\n        \n    }\n\n\n    render () {\n\n        const { charList, loading, error, offset, newItemLoading, charEnded } = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import React from 'react';\n\nimport './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import React from 'react';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const { charId } = this.props;\n\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n\n        const { char, loading, error } = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton />;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n\n    const { name, descr, thumbnail, homepage, wiki, comics } = char;\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} target=\"_blank\" rel=\"noopener noreferrer\" className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} target=\"_blank\" rel=\"noopener noreferrer\" className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {descr}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {\n                    comics.map((item, i) => {\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","\n\nimport React from 'react';\nimport { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\n    state = {\n        error: false\n    }\n\n    componentDidCatch (err, errInfo) {\n        console.log(err, errInfo);\n\n        this.setState({error: true})\n    }\n\n    render() {\n        if (this.state.error) {\n            return <h2>Something went wrong</h2>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary","import React from 'react';\nimport { Component } from 'react';\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    \n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList \n                            onCharSelected={this.onCharSelected}\n                            selectedChar={this.state.selectedChar} />\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./components/app/App\";\nimport MarvelService from \"./services/MarvelService\";\n\nimport \"./style/style.scss\";\n\nconst marvelService = new MarvelService;\n\nmarvelService.getAllCharacters().then((res) => console.log(res));\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>     \n\n);\n"],"sourceRoot":""}